%%%
% A tool for determining an appropriate threshold for an experiment.
% Displays two histograms for the distribution of measured values and the
% derivative over the traces respectively. Asks the user for the number of
% standard deviations above the mean for the threshold. The threshold
% should be seleted as high as possible without cutting off all the data.
% Input : traces - A traces matrix of the kind generated by importCSV.m
%         fixThresh - instead of querying the user, a fixed percentile can
%                       be provided.
% Output: thrTraces - The threshold for the traces
%         thrDiffTraces - The threshold for the derivative of the traces
%
function [thrTraces , thrDiffTraces , thr1 , thr2] = get_Threshold(traces, fixThresh,flags)
    diffTraces = diff(traces);
    if nargin > 1
        % set threshold as percentile of stationary distribution
        if flags.indivThresh % for each cell individually
            thrTraces = prctile(traces,fixThresh); thrDiffTraces = prctile(diffTraces,fixThresh);
        else % for all cells combined
            thrTraces = prctile(traces(:),fixThresh); thrDiffTraces = prctile(diffTraces(:),fixThresh);
        end
    else
    f = figure(); 
    subplot(1,2,1)
    hold on;
    histogram(traces(:),'Normalization','Probability');
    y = ylim;
    title('Distribution of Measurements')
    xlabel('F/F0')
    ylabel('pdf')
    meanTraces = mean(traces(:));
    stdTraces = std(traces(:));
    plot([meanTraces meanTraces] , [0 , 0.1])
    plot([meanTraces + stdTraces meanTraces + stdTraces] , [0 , 0.1])
    plot([meanTraces + 2*stdTraces meanTraces + 2*stdTraces] , [0 , 0.1])
    plot([meanTraces + 3*stdTraces meanTraces + 3*stdTraces] , [0 , 0.1])
    plot([meanTraces + 4*stdTraces meanTraces + 4*stdTraces] , [0 , 0.1])
    ylim(y); xlim([meanTraces - 1*stdTraces meanTraces + 5*stdTraces])
    ax = gca;
    ax.XTick = [meanTraces , meanTraces+ stdTraces , meanTraces+ 2*stdTraces  ,...
    meanTraces+ 3*stdTraces  , meanTraces+ 4*stdTraces ];
    ax.XTickLabel={'0','1','2','3','4'};
    subplot(1,2,2)
    hold on;
    histogram(diffTraces(:),'Normalization','Probability');
    y = ylim;
    title('Distribution of change rates')
    xlabel('d(F/F0)/dt')
    ylabel('pdf')
    meanDiffTraces = mean(diffTraces(:));
    stdDiffTraces = std(diffTraces(:));
    plot([meanDiffTraces meanDiffTraces] , [0 , 0.1])
    plot([meanDiffTraces + stdDiffTraces meanDiffTraces + stdDiffTraces] , [0 , 0.1])
    plot([meanDiffTraces + 2*stdDiffTraces meanDiffTraces + 2*stdDiffTraces] , [0 , 0.1])
    plot([meanDiffTraces + 3*stdDiffTraces meanDiffTraces + 3*stdDiffTraces] , [0 , 0.1])
    plot([meanDiffTraces + 4*stdDiffTraces meanDiffTraces + 4*stdDiffTraces] , [0 , 0.1])
    ylim(y); xlim([meanDiffTraces - 1*stdDiffTraces meanDiffTraces + 5*stdDiffTraces])
    
    ax = gca;
    ax.XTick = [meanDiffTraces , meanDiffTraces+ stdDiffTraces , meanDiffTraces+ 2*stdDiffTraces  ,...
        meanDiffTraces+ 3*stdDiffTraces  , meanDiffTraces+ 4*stdDiffTraces ];
    ax.XTickLabel={'0','1','2','3','4'};
        SDstring = input('How many SDs? (1-4) ','s');
        SDcell = strsplit(SDstring,'x');
        thr1 = str2num(SDcell{1});
        thr2 = str2num(SDcell{2});
        close(f);
        thrTraces = meanTraces + thr1*stdTraces;
        thrDiffTraces = meanDiffTraces + thr2*stdDiffTraces;
    end
end